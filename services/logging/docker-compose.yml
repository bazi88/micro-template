version: '3.8'

services:
  logging:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${LOGGING_PORT:-8082}:8082"
    environment:
      # Service Configuration
      - SERVICE_NAME=${SERVICE_NAME:-logging-service}
      
      # Elasticsearch Configuration (Optional)
      - ES_ENABLED=${ES_ENABLED:-false}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL:-http://localhost:9200}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      
      # Service Discovery (Optional)
      - DISCOVERY_ENABLED=${DISCOVERY_ENABLED:-false}
      - CONSUL_ADDRESS=${CONSUL_ADDRESS:-localhost:8500}
      
      # Monitoring (Optional)
      - METRICS_ENABLED=${METRICS_ENABLED:-false}
      - TRACING_ENABLED=${TRACING_ENABLED:-false}
      
      # Log Configuration
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - LOG_OUTPUT=${LOG_OUTPUT:-file}
      - LOG_FILE_PATH=${LOG_FILE_PATH:-/var/log/micro/app.log}
      - LOG_MAX_SIZE=${LOG_MAX_SIZE:-100}
      - LOG_MAX_FILES=${LOG_MAX_FILES:-10}
      - LOG_COMPRESS=${LOG_COMPRESS:-true}
    volumes:
      - ./config:/app/config
      - logging_data:/var/log/micro
    networks:
      - logging_network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      mode: replicated
      replicas: ${LOGGING_REPLICAS:-1}
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '${LOGGING_CPU_LIMIT:-0.3}'
          memory: ${LOGGING_MEMORY_LIMIT:-256M}
        reservations:
          cpus: '${LOGGING_CPU_RESERVATION:-0.15}'
          memory: ${LOGGING_MEMORY_RESERVATION:-128M}

networks:
  logging_network:
    driver: bridge

volumes:
  logging_data: 